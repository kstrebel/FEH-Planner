// <auto-generated />
using System;
using FEH_Planner.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FEH_Planner.Migrations
{
    [DbContext(typeof(FEHPlannerContext))]
    partial class FEHPlannerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FEH_Planner.Models.Build", b =>
                {
                    b.Property<int>("BuildID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("A_SkillID")
                        .HasColumnType("int");

                    b.Property<int?>("B_SkillID")
                        .HasColumnType("int");

                    b.Property<int?>("C_SkillID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("S_SkillID")
                        .HasColumnType("int");

                    b.Property<int>("UnitID")
                        .HasColumnType("int");

                    b.Property<int?>("WeaponID")
                        .HasColumnType("int");

                    b.HasKey("BuildID");

                    b.HasIndex("A_SkillID");

                    b.HasIndex("B_SkillID");

                    b.HasIndex("C_SkillID");

                    b.HasIndex("S_SkillID");

                    b.HasIndex("UnitID");

                    b.HasIndex("WeaponID");

                    b.ToTable("Builds");

                    b.HasData(
                        new
                        {
                            BuildID = 1,
                            A_SkillID = 3,
                            B_SkillID = 4,
                            C_SkillID = 6,
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First",
                            UnitID = 5,
                            WeaponID = 1
                        },
                        new
                        {
                            BuildID = 2,
                            A_SkillID = 4,
                            B_SkillID = 4,
                            C_SkillID = 6,
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second",
                            UnitID = 246,
                            WeaponID = 7
                        });
                });

            modelBuilder.Entity("FEH_Planner.Models.Skill", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inheritable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SP")
                        .HasColumnType("int");

                    b.Property<string>("Slot")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("SkillID");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            SkillID = 1,
                            Description = "Unit can counterattack regardless of foe's range.",
                            Inheritable = true,
                            Name = "Distant Counter",
                            SP = 300,
                            Slot = "a"
                        },
                        new
                        {
                            SkillID = 2,
                            Description = "If unit is not adjacent to an ally, grants Atk/Def+7.",
                            Inheritable = true,
                            Name = "Atk/Def Solo 4",
                            SP = 300,
                            Slot = "a"
                        },
                        new
                        {
                            SkillID = 3,
                            Description = "Grants HP+5, Atk/Spd/Def/Res+2. If unit is 5★, level 40, a Legendary Hero or a Mythic Hero, and unit's stats total less than 175, treats unit's stats as 175 in modes like Arena. If unit is 5★, level 40, not a Legendary Hero or Mythic Hero and unit's stats total less than 180, treats unit's stats as 180 in modes like Arena.",
                            Inheritable = true,
                            Name = "R Duel Infantry 4",
                            SP = 300,
                            Slot = "a"
                        },
                        new
                        {
                            SkillID = 4,
                            Description = "If unit's HP ≤ 75% and unit initiates combat, unit can make a follow-up attack before foe can counterattack.",
                            Inheritable = true,
                            Name = "Desperation 3",
                            SP = 300,
                            Slot = "b"
                        },
                        new
                        {
                            SkillID = 5,
                            Description = "At the start of turn 1, restores 99 HP and grants Special cooldown count-1.",
                            Inheritable = false,
                            Name = "S Drink",
                            SP = 300,
                            Slot = "b"
                        },
                        new
                        {
                            SkillID = 6,
                            Description = "Allies within 2 spaces gain: \"If foe uses bow, dagger, magic, or staff, grants Def / Res + 4 during combat.\"",
                            Inheritable = true,
                            Name = "Distant Guard",
                            SP = 240,
                            Slot = "c"
                        },
                        new
                        {
                            SkillID = 7,
                            Inheritable = true,
                            Name = "Silver Sword",
                            SP = 300,
                            Slot = "w"
                        });
                });

            modelBuilder.Entity("FEH_Planner.Models.Unit", b =>
                {
                    b.Property<int>("UnitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Entry1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entry2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Epithet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LowestRarity")
                        .HasColumnType("int");

                    b.Property<string>("MovementType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("WeaponType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitID");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            UnitID = 5,
                            Availability = "r",
                            Entry1 = "Mystery",
                            Epithet = "Altean Prince",
                            LowestRarity = 3,
                            MovementType = "i",
                            Name = "Marth",
                            WeaponType = "Red Sword"
                        },
                        new
                        {
                            UnitID = 297,
                            Availability = "l",
                            Entry1 = "Mystery",
                            Epithet = "Legendary Dragon",
                            LowestRarity = 5,
                            MovementType = "a",
                            Name = "Tiki",
                            WeaponType = "Blue Breath"
                        },
                        new
                        {
                            UnitID = 246,
                            Availability = "r",
                            Entry1 = "Geneology",
                            Epithet = "Black Knight",
                            LowestRarity = 3,
                            MovementType = "c",
                            Name = "Ares",
                            WeaponType = "Red Sword"
                        },
                        new
                        {
                            UnitID = 701,
                            Availability = "s",
                            Entry1 = "Geneology",
                            Entry2 = "Thracia",
                            Epithet = "Destined Scions",
                            LowestRarity = 5,
                            MovementType = "c",
                            Name = "Leif",
                            SpecialType = "h",
                            WeaponType = "Colorless Bow"
                        },
                        new
                        {
                            UnitID = 520,
                            Availability = "s",
                            Entry1 = "Dawn",
                            Epithet = "Dawn Wind's Duo",
                            LowestRarity = 5,
                            MovementType = "f",
                            Name = "Micaiah",
                            SpecialType = "d",
                            WeaponType = "Colorless Tome"
                        },
                        new
                        {
                            UnitID = 586,
                            Availability = "g",
                            Entry1 = "Fates",
                            Epithet = "Focused Ninja",
                            LowestRarity = 4,
                            MovementType = "i",
                            Name = "Hana",
                            WeaponType = "Green Axe"
                        });
                });

            modelBuilder.Entity("FEH_Planner.Models.Build", b =>
                {
                    b.HasOne("FEH_Planner.Models.Skill", "A_Skill")
                        .WithMany("BuildA_Skills")
                        .HasForeignKey("A_SkillID");

                    b.HasOne("FEH_Planner.Models.Skill", "B_Skill")
                        .WithMany("BuildB_Skills")
                        .HasForeignKey("B_SkillID");

                    b.HasOne("FEH_Planner.Models.Skill", "C_Skill")
                        .WithMany("BuildC_Skills")
                        .HasForeignKey("C_SkillID");

                    b.HasOne("FEH_Planner.Models.Skill", "S_Skill")
                        .WithMany("BuildS_Skills")
                        .HasForeignKey("S_SkillID");

                    b.HasOne("FEH_Planner.Models.Unit", null)
                        .WithMany("BuildUnits")
                        .HasForeignKey("UnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEH_Planner.Models.Skill", "Weapon")
                        .WithMany("BuildWeapons")
                        .HasForeignKey("WeaponID");

                    b.Navigation("A_Skill");

                    b.Navigation("B_Skill");

                    b.Navigation("C_Skill");

                    b.Navigation("S_Skill");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("FEH_Planner.Models.Skill", b =>
                {
                    b.Navigation("BuildA_Skills");

                    b.Navigation("BuildB_Skills");

                    b.Navigation("BuildC_Skills");

                    b.Navigation("BuildS_Skills");

                    b.Navigation("BuildWeapons");
                });

            modelBuilder.Entity("FEH_Planner.Models.Unit", b =>
                {
                    b.Navigation("BuildUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
